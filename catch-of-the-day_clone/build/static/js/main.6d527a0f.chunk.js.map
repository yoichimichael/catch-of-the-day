{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","bind","event","preventDefault","storeName","this","current","value","props","history","push","className","onSubmit","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","fishDetails","src","alt","disabled","addToOrder","App","Date","now","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d527a0f.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// from separate function file with named exports\nimport { getFunName } from '../helpers';\n\n// capitalize first letter of class name\nclass StorePicker extends React.Component {\n\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  constructor() {\n    // necessary for a constructor method\n    // extends functionality from Component\n    super();\n\n    // reassigns the function value by adding a binding\n    // \"When creating this class, bind 'this' to the goToStore method\"\n    this.goToStore = this.goToStore.bind(this);\n  }\n\n  // creates a reference to the form input\n  myInput = React.createRef();\n\n  // note: has to have 'this' bound to it in constructor\n  // can avoid having to bind 'this' by using arrow syntax\n  // arrow functions are bound by default\n  goToStore(event) {\n    // 1. stop form from submitting\n    event.preventDefault();\n    // 2. get the text from the input\n    // note that this differs from course lesson\n    // in lesson, 'current' is 'value'\n    // because older version of React?\n    const storeName = this.myInput.current.value;\n    // 3. change the page to /store/whatever-they-entered\n    // changes the URL in the browser's address bar\n    // <BrowserRouter/> responds to this by 'switching' components  \n    this.props.history.push(`/store/${storeName}`)\n  }\n  \n  render() {\n    \n    return (\n      // this is a store picker\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n\n        {/* when component mounts to DOM, will render a rand */}\n        <input \n          type=\"text\" \n          ref={this.myInput}\n          required placeholder=\"Store Name\" \n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    )\n\n    // Example of no-JSX element creation:\n    // React.createElement(‘p’, { className: ‘hey }, “Heyoooo’);\n    \n  }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n// stateless functional component\n// implicit return\n// destructured props\nconst Header = ({ tagline }) => (\n  <header className=\"top\">\n    <h1>\n      Catch \n      <span className=\"ofThe\">  \n        <span className=\"of\">of</span> \n        <span  className=\"the\">the</span>\n      </span> \n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\n// regular component\n// class Header extends Component {\n//   render() {\n//     return (\n//         <header className=\"top\">\n//           <h1>\n//             Catch \n//             <span className=\"ofThe\">  \n//               <span className=\"of\">of</span> \n//               <span  className=\"the\">the</span>\n//             </span> \n//             Day\n//           </h1>\n//           <h3 className=\"tagline\">\n//             <span>{this.props.tagline}</span>\n//           </h3>\n//         </header>\n//     )\n//   }\n// }\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatPrice } from '../helpers';\n// for transition animation\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'; \n\nclass Order extends Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n\n  // helper render function \n  renderOrder = (key) => {\n    \n\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n\n    \n\n    // if fish exists AND fish.status === 'available\n    const isAvailable = fish && fish.status === 'available';\n\n    const transitionOptions = {\n      //note pluralized class names\n      classNames: \"order\",\n      key: key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    // console.log({...transitionOptions});\n\n    // make sure fish is loaded before we continue\n    // this prevents 'fish is unavailable' from flashing before load\n    if (!fish) return null;\n\n    if(!isAvailable) {\n      return (\n        // reusable options object\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            {/* fallback to account for missing fish if removed from inventory */}\n            Sorry {fish? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      )\n    }\n    \n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition \n                classNames=\"count\" \n                key={count} \n                // note: as an object, this could be defined in a variable somewhere else and inserted by name, instead of as an object literal, like below\n                timeout={{enter: 500, exit: 500}}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup> \n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            {/* '&times' is special symbol for 'x' */}\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n\n  }\n\n  render() {\n\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if(isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default Order;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends Component {\n  \n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n  \n  // arrow component to allow access to 'this'\n  createFish = (e) => {\n    // stop submit action\n    e.preventDefault();\n    \n    const fish = {\n      name: this.nameRef.current.value, \n      price: parseFloat(this.priceRef.current.value), \n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n\n    this.props.addFish(fish);\n\n    e.currentTarget.reset();\n\n  }\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\n        <button type=\"submit\">+ Add Fish</button>\n    </form>\n    )\n  }\n}\n\nexport default AddFishForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string, \n      name: PropTypes.string,  \n      desc: PropTypes.string, \n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n\n  handleChange = (e) => {\n    // update that fish\n    // 1. take a copy of the current fish\n    const updatedFish = { \n      ...this.props.fish,\n      // overwrites the property contained in the copy we received via above soread operator\n      [e.currentTarget.name]: e.currentTarget.value  \n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  }\n\n  render() {\n    return <div className=\"fish-edit\">\n      <input \n        type=\"text\" \n        name=\"name\" \n        onChange={this.handleChange} \n        value={this.props.fish.name} \n      />\n      <input \n        type=\"text\" \n        name=\"price\" \n        onChange={this.handleChange} \n        value={this.props.fish.price} \n      />\n      <select \n        type=\"text\" \n        name=\"status\" \n        onChange={this.handleChange} \n        value={this.props.fish.status}\n      >\n        <option value=\"available\">Fresh!</option>\n        <option value=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea \n        name=\"desc\" \n        onChange={this.handleChange} \n        value={this.props.fish.desc}>\n\n      </textarea>\n      <input \n        type=\"text\" \n        name=\"image\" \n        onChange={this.handleChange} \n        value={this.props.fish.image} \n      />\n      <button \n        onClick={() => this.props.deleteFish(this.props.index)}\n      >\n        Remove Fish\n      </button>\n    </div>\n  }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button \n      className=\"github\" \n      onClick={() => props.authenticate('Github')}\n    >\n      Login With Github\n    </button>\n    <button \n      className=\"twitter\" \n      onClick={() => props.authenticate('Twitter')}\n    >\n      Login With Twitter\n    </button>\n    <button \n      className=\"facebook\" \n      onClick={() => props.authenticate('Facebook')}\n    >\n      Login With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\n// creates firebase app\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDLyt8eOeBC_EkZDe0RaaBPUujPJL-8u64\",\n  authDomain: \"catch-of-the-day---ymn.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day---ymn-default-rtdb.firebaseio.com\",\n})\n\n// creates rebase bindings\nconst base = Rebase.createClass(firebaseApp.database()); \n\n// this is a named export\nexport { firebaseApp }\n\n// this is a default export\nexport default base;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\n\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  }  \n\n  state = { \n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    // checks to see if user is logged in to show or not show inventory on refresh\n    firebase.auth().onAuthStateChanged(user => {\n      if(user){\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  // authData is user data from whichever platform was used to sign in\n  authHandler = async (authData) => {\n    // 1. lookup current store in firebase database\n    // look up this use of fetch vs. post, used below\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. claim it if there's no owner\n    if (!store.owner){\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n    console.log(authData)\n  }\n\n  authenticate = (provider) => {\n    // create a new auth provider based on through whom user wants to sign in\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    // user signs in with a popup and then user data gets sent to authHander()\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  }\n\n  logout = async () => {\n    console.log('Logging Out!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n  \n  render() {\n\n    const logout = <button onClick={this.logout}>Log Out!</button>\n\n    // 1. check if they are not logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>\n    }\n    \n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return <div>\n        <p>Sorry, you are not the owner!</p>\n        {logout}\n      </div>\n    }\n\n    // 3. they must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => \n          <EditFishForm \n            key={key} \n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        )}\n        <AddFishForm addFish={this.props.addFish}/>\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatPrice } from '../helpers';\n\n\nclass Fish extends Component {\n\n  static propTypes = {\n    fishDetails: PropTypes.shape({\n      image: PropTypes.string, \n      name: PropTypes.string,  \n      desc: PropTypes.string, \n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }  \n\n  render() {\n\n    // ES6 destructuring\n    const { image, name, price, desc, status } = this.props.fishDetails;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name}/>\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable ? \"Add To Order \" : \"Sold Out!\"}</button>\n      </li>\n    )\n  }\n}\n\nexport default Fish;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport fishes from '../sample-fishes';\nimport Fish from './Fish'\nimport base from '../base';\n\nclass App extends Component {\n\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object \n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    // reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId)\n    // console.log(JSON.parse(localStorageRef))\n    if(localStorageRef){\n      this.setState({ order: JSON.parse(localStorageRef) })\n    }\n\n    // this is not a React ref, but a firebase ref\n    // this is a reference to the Firebase datase\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      // syncs App's sync state\n      context: this,\n      state: 'fishes'\n    });\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem(\n      this.props.match.params.storeId, \n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount(){\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    const fishes = {...this.state.fishes};\n    fishes[`fish${Date.now()}`] = fish\n    this.setState({ fishes });\n  }\n\n  updateFish = (key, updatedFish) => {\n    // 1. take a copy of a current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    this.setState({ fishes });\n  }\n\n  deleteFish = (key) => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes};\n    // 2. update the copy\n    // note that for firebase to register a deleted item, it needs to be set to null\n    fishes[key] = null;\n    // 3. update the state\n    this.setState({ fishes })\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes });\n  }\n\n  addToOrder = (key) => {\n    // 1. take a copy of state\n    const order = { ...this.state.order }\n    // 2. Either add or update order\n    order[key] = order[key] + 1 || 1; \n    // 3. Call setState to update our state object\n    this.setState({ order });\n  }\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order }\n    // 2. Remove that item from order\n    // not mirroring to firebase, so don't need to set to null\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n                    {/* component instance */}\n           <Header tagline=\"Fresh Seafood Market\"/>\n           <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish \n                key={key} \n                index={key}\n                fishDetails={this.state.fishes[key]} \n                addToOrder={this.addToOrder}\n              />\n            ))}\n           </ul>\n        </div>\n        {/* component instance */}\n        <Order \n          fishes={this.state.fishes} \n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        {/* component instance */}\n        <Inventory \n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          // props from React Router\n          storeId={this.props.match.params.storeId}\n        />\n \n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!</h2>\n  </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { \n  BrowserRouter, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}/>\n      <Route path=\"/store/:storeId\" component={App}/>\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;","// can import this because it's part of our dependencies\n// make sure second react is lower case\nimport React from 'react'; \n\n// alternate to above:\n// import React, { Component } from 'react';\n// class StorePicker extends Component {}\n\n// importing only the render method from the 'react-dom' dependency\nimport { render } from 'react-dom';\n\n// need to use relative path\n// can leave off file extension, as .js is assumed\nimport Router from './components/Router';\n\nimport './css/style.css';\n\nrender(<Router />, document.getElementById('main'));"],"sourceRoot":""}